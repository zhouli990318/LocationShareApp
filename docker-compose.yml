version: '3.8'

services:
  # PostgreSQL数据库服务
  postgres:
    image: postgres:15
    container_name: locationshare-postgres
    environment:
      POSTGRES_DB: LocationShareDB
      POSTGRES_USER: locationshare
      POSTGRES_PASSWORD: LocationShare2024!
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - locationshare-network
    restart: unless-stopped

  # Redis缓存服务（可选，用于SignalR扩展）
  redis:
    image: redis:7-alpine
    container_name: locationshare-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - locationshare-network
    restart: unless-stopped

  # API服务
  api:
    build:
      context: .
      dockerfile: API/Dockerfile
    container_name: locationshare-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=LocationShareDB;Username=locationshare;Password=LocationShare2024!
      - JwtSettings__SecretKey=YourSuperSecretKeyThatIsAtLeast32CharactersLongForProduction!
      - JwtSettings__Issuer=LocationShareApp
      - JwtSettings__Audience=LocationShareApp
      - JwtSettings__ExpiryInHours=24
    ports:
      - "8080:80"
    depends_on:
      - postgres
      - redis
    networks:
      - locationshare-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: locationshare-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - locationshare-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  locationshare-network:
    driver: bridge